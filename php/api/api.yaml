openapi: 3.0.0
info:
  title: esakeMockApi
  description: This api is to be used by mobile apps to supply and read basketball game information for the esake organisation
  version: 0.1.0
servers:
  - url: 'http://{host}/api'
    variables:
      host:
        default: localhost
        description: The domain or ip address of the server
components:
  parameters:
    idParam:
      name: id
      in: path
      required: true
      schema:
        type: integer
paths:
  /teams:
    get:
      summary: Get the list of teams
      description: Retrieves all of the known teams
      responses:
        '200':
          description: Everything went fine.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    teamId:
                      type: integer
                    teamName:
                      type: string
                    teamEmblemUrl:
                      type: string
  '/teams/{id}':
    get:
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  players:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        role:
                          type: string
                        photoUrl:
                          type: string
  '/players/{id}':
    summary: Get player details
    get:
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        '200':
          description: Request Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  playerName:
                    type: string
                  teamId:
                    type: integer
                  role:
                    type: string
                  photoUrl:
                    type: string
  /games/:
    get:
      summary: Get a list of games
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    teamA:
                      type: string
                    teamAscore:
                      type: integer
                    teamB:
                      type: string
                    teamBscore:
                      type: integer
                    timeStart:
                      type: integer
                    timeEnd:
                      type: integer
              examples:
                example:
                  value:
                    - id: 43
                      teamA: Olympiakos
                      teamAscore: 10
                      teamB: PAOK
                      teamBscore: 10
                      timeStart: 1650896534
                      timeEnd: 0
      parameters:
        - schema:
            type: string
          in: query
          name: team
          description: Filter by team
        - schema:
            type: boolean
          in: query
          name: finished
          description: Return only finished games
